Inputs for Problem B:
DESCRIPTION:
As shown in the diagram, AB=8, MN=3, AN bisects âˆ DAB, M bisects segment BC, BN is perpendicular to AN. Find the length of line AC.
CONSTRUCTION_CDL:
Shape(AB,BN,NA)
Shape(NB,BM,MN)
Shape(AN,ND,DA)
Shape(NM,MC,CD,DN)
Collinear(ADC)
Collinear(BMC)
Collinear(BND)
TEXT_CDL:
Equal(LengthOfLine(AB),8)
Equal(LengthOfLine(MN),3)
IsBisectorOfAngle(AN,DAB)
IsMidpointOfLine(M,BC)
PerpendicularBetweenLine(BN,AN)
GOAL_CDL:
Value(LengthOfLine(AC))
CONSTRUCTION_CDL_EXTENDED:
Shape(BN,NA,AB)
Shape(NA,AB,BN)
Shape(BM,MN,NB)
Shape(MN,NB,BM)
Shape(ND,DA,AN)
Shape(DA,AN,ND)
Shape(MC,CD,DN,NM)
Shape(CD,DN,NM,MC)
Shape(DN,NM,MC,CD)
Shape(NA,AB,BM,MN)
Shape(AB,BM,MN,NA)
Shape(BM,MN,NA,AB)
Shape(MN,NA,AB,BM)
Shape(AB,BN,ND,DA)
Shape(BN,ND,DA,AB)
Shape(ND,DA,AB,BN)
Shape(DA,AB,BN,ND)
Shape(NB,BM,MC,CD,DN)
Shape(BM,MC,CD,DN,NB)
Shape(MC,CD,DN,NB,BM)
Shape(CD,DN,NB,BM,MC)
Shape(DN,NB,BM,MC,CD)
Shape(DA,AN,NM,MC,CD)
Shape(AN,NM,MC,CD,DA)
Shape(NM,MC,CD,DA,AN)
Shape(MC,CD,DA,AN,NM)
Shape(CD,DA,AN,NM,MC)
Shape(NA,AB,BM,MC,CD,DN)
Shape(AB,BM,MC,CD,DN,NA)
Shape(BM,MC,CD,DN,NA,AB)
Shape(MC,CD,DN,NA,AB,BM)
Shape(CD,DN,NA,AB,BM,MC)
Shape(DN,NA,AB,BM,MC,CD)
Shape(AB,BN,NM,MC,CD,DA)
Shape(BN,NM,MC,CD,DA,AB)
Shape(NM,MC,CD,DA,AB,BN)
Shape(MC,CD,DA,AB,BN,NM)
Shape(CD,DA,AB,BN,NM,MC)
Shape(DA,AB,BN,NM,MC,CD)
Shape(BM,MN,ND,DA,AB)
Shape(MN,ND,DA,AB,BM)
Shape(ND,DA,AB,BM,MN)
Shape(DA,AB,BM,MN,ND)
Shape(AB,BM,MN,ND,DA)
Shape(NB,BM,MC,CD,DA,AN)
Shape(BM,MC,CD,DA,AN,NB)
Shape(MC,CD,DA,AN,NB,BM)
Shape(CD,DA,AN,NB,BM,MC)
Shape(DA,AN,NB,BM,MC,CD)
Shape(AN,NB,BM,MC,CD,DA)
Shape(AB,BM,MC,CD,DA)
Shape(BM,MC,CD,DA,AB)
Shape(MC,CD,DA,AB,BM)
Shape(CD,DA,AB,BM,MC)
Shape(DA,AB,BM,MC,CD)
Collinear(CDA)
Collinear(CMB)
Collinear(DNB)
Point(A)
Point(C)
Point(D)
Point(B)
Point(M)
Point(N)
Line(AC)
Line(CA)
Line(AD)
Line(DA)
Line(DC)
Line(CD)
Line(BC)
Line(CB)
Line(BM)
Line(MB)
Line(MC)
Line(CM)
Line(BD)
Line(DB)
Line(BN)
Line(NB)
Line(ND)
Line(DN)
Line(AB)
Line(BA)
Line(NA)
Line(AN)
Line(MN)
Line(NM)
Angle(ADC)
Angle(CDA)
Angle(BMC)
Angle(CMB)
Angle(BND)
Angle(DNB)
Angle(ABN)
Angle(BNA)
Angle(NAB)
Angle(NBM)
Angle(BMN)
Angle(MNB)
Angle(AND)
Angle(NDA)
Angle(DAN)
Angle(NMC)
Angle(MCD)
Angle(CDN)
Angle(DNM)
Angle(ABM)
Angle(MNA)
Angle(BDA)
Angle(DAB)
Angle(BCD)
Angle(ANM)
Angle(DNA)
Angle(BNM)
Angle(CAB)
Angle(MND)
Angle(CAN)
Angle(ANB)
Angle(CMN)
Angle(NDC)
Angle(ABD)
Angle(NBC)
Angle(DBM)
Angle(DBC)
Angle(BCA)
Angle(MCA)
Angle(CDB)
Angle(ABC)
Angle(BDC)
Angle(NBA)
Angle(BAN)
Angle(MBN)
Angle(NMB)
Angle(ADN)
Angle(NAD)
Angle(DCM)
Angle(MBA)
Angle(ADB)
Angle(BAD)
Angle(DCB)
Angle(BAC)
Angle(NAC)
Angle(DBA)
Angle(CBN)
Angle(MBD)
Angle(CBD)
Angle(ACB)
Angle(ACM)
Angle(CBA)
Polygon(ABN)
Polygon(ANB)
Polygon(BAN)
Polygon(BNA)
Polygon(NAB)
Polygon(NBA)
Polygon(NBM)
Polygon(NMB)
Polygon(BNM)
Polygon(BMN)
Polygon(MNB)
Polygon(MBN)
Polygon(AND)
Polygon(ADN)
Polygon(NAD)
Polygon(NDA)
Polygon(DAN)
Polygon(DNA)
Polygon(NMCD)
Polygon(MCDN)
Polygon(CDNM)
Polygon(DNMC)
Polygon(NABM)
Polygon(ABMN)
Polygon(BMNA)
Polygon(MNAB)
Polygon(ABD)
Polygon(ADB)
Polygon(BAD)
Polygon(BDA)
Polygon(DAB)
Polygon(DBA)
Polygon(BCD)
Polygon(BDC)
Polygon(CBD)
Polygon(CDB)
Polygon(DBC)
Polygon(DCB)
Polygon(ANMC)
Polygon(NMCA)
Polygon(MCAN)
Polygon(CANM)
Polygon(NABCD)
Polygon(ABCDN)
Polygon(BCDNA)
Polygon(CDNAB)
Polygon(DNABC)
Polygon(ABNMC)
Polygon(BNMCA)
Polygon(NMCAB)
Polygon(MCABN)
Polygon(CABNM)
Polygon(BMNDA)
Polygon(MNDAB)
Polygon(NDABM)
Polygon(DABMN)
Polygon(ABMND)
Polygon(NBCA)
Polygon(BCAN)
Polygon(CANB)
Polygon(ANBC)
Polygon(ABC)
Polygon(ACB)
Polygon(BAC)
Polygon(BCA)
Polygon(CAB)
Polygon(CBA)
IsMidpointOfLine(M,CB)
SYMBOLS_AND_VALUES:
AreaOfQuadrilateral(ABCD);aq_abcd;28
AreaOfQuadrilateral(BCDA);aq_abcd;28
AreaOfQuadrilateral(CDAB);aq_abcd;28
AreaOfQuadrilateral(DABC);aq_abcd;28
LengthOfLine(BC);ll_bc;4
LengthOfLine(CB);ll_bc;4
LengthOfLine(DM);ll_dm;6
LengthOfLine(MD);ll_dm;6
MeasureOfAngle(ABM);ma_abm;None
MeasureOfAngle(ABE);ma_abm;None
MeasureOfAngle(MBC);ma_mbc;None
MeasureOfAngle(EBC);ma_mbc;None
AreaOfTriangle(ABE);at_abe;None
AreaOfTriangle(BEA);at_abe;None
AreaOfTriangle(EAB);at_abe;None

Outputs:
Outputs for Problem B:

***MODEL_RESPONSE_BEGIN***
EQUATIONS:
ll_ab-8
ll_mn-3
ma_bna-90
ma_dan-ma_nab

GOAL_SYMBOL:
ll_ac

ANSWER:
14

THEOREM_SEQUENCE:
1; adjacent_complementary_angle(1,BNA,AND); Collinear(BND)&Angle(BNA)&Angle(AND); ["Equal(Add(MeasureOfAngle(BNA),MeasureOfAngle(AND)),180)"]
2; triangle_property_angle_sum(1,ABN); Polygon(ABN); ["Equal(Add(MeasureOfAngle(ABN),MeasureOfAngle(BNA),MeasureOfAngle(NAB)),180)"]
3; triangle_property_angle_sum(1,AND); Polygon(AND); ["Equal(Add(MeasureOfAngle(AND),MeasureOfAngle(NDA),MeasureOfAngle(DAN)),180)"]
4; mirror_congruent_triangle_judgment_aas(1,AND,ABN); Polygon(AND)&Polygon(ABN)&Equal(MeasureOfAngle(AND),MeasureOfAngle(BNA))&Equal(MeasureOfAngle(NDA),MeasureOfAngle(ABN))&Equal(LengthOfLine(AN),LengthOfLine(AN)); ["MirrorCongruentBetweenTriangle(AND,ABN)"]
5; mirror_congruent_triangle_property_line_equal(1,AND,ABN); MirrorCongruentBetweenTriangle(AND,ABN); ["Equal(LengthOfLine(DN),LengthOfLine(BN))"]
6; mirror_congruent_triangle_property_line_equal(1,AND,ABN); MirrorCongruentBetweenTriangle(AND,ABN); ["Equal(LengthOfLine(AD),LengthOfLine(AB))"]
7; midsegment_of_triangle_judgment_midpoint(DE,ABC); Polygon(BCD)&Collinear(BMC)&Collinear(BND)&Line(MN)&Equal(LengthOfLine(BM),LengthOfLine(MC))&Equal(LengthOfLine(BN),LengthOfLine(ND)); ["IsMidsegmentOfTriangle(MN,BCD)"]
8; midsegment_of_triangle_property_length(DE,ABC); IsMidsegmentOfTriangle(MN,BCD); ["Equal(LengthOfLine(MN),Mul(LengthOfLine(DC),1/2))"]
9; line_addition(AB,BC); Collinear(ADC); ["Equal(LengthOfLine(AC),Add(LengthOfLine(AD),LengthOfLine(DC)))"]
***MODEL_RESPONSE_END***
RETRIES_MESSAGES:
#retry: 1; message: Tier1 error. Theorem <adjacent_complementary_angle> branch error. Expected dict_keys(['1']) but got None. Please rewrite your response, you should change only the call to theorem <adjacent_complementary_angle> by adding the branch number from the dict_keys as the first argument
#retry: 2; message: Tier1 error. Theorem <triangle_property_angle_sum> branch error. Expected dict_keys(['1']) but got None. Please rewrite your response, you should change only the call to theorem <triangle_property_angle_sum> by adding the branch number from the dict_keys as the first argument
#retry: 3; message: Tier1 error. Theorem <mirror_congruent_triangle_judgment_aas> branch error. Expected dict_keys(['1', '2', '3']) but got None. Please rewrite your response, you should change only the call to theorem <mirror_congruent_triangle_judgment_aas> by adding the branch number from the dict_keys as the first argument
#retry: 4; message: Tier1 error. Theorem <mirror_congruent_triangle_property_line_equal> branch error. Expected dict_keys(['1']) but got None. Please rewrite your response, you should change only the call to theorem <mirror_congruent_triangle_property_line_equal> by adding the branch number from the dict_keys as the first argument
#retry: 5; message: Tier1 error. Theorem <midsegment_of_triangle_judgment_midpoint> branch error. Expected dict_keys(['1']) but got None. Please rewrite your response, you should change only the call to theorem <midsegment_of_triangle_judgment_midpoint> by adding the branch number from the dict_keys as the first argument
#RETRIES:
5
#RUNS:
0


GT_EQUATIONS:
ll_ab-8
ll_mn-3
ma_dan-ma_nab
ll_bm-ll_mc
ma_bna-90
GT_GOAL_SYMBOL:
ll_ac
GT_ANSWER:
14
GT_THEOREM_SEQUENCE:
1;adjacent_complementary_angle(1,BNA,AND);Collinear(BND)&Angle(BNA)&Angle(AND);["Equal(Add(MeasureOfAngle(BNA),MeasureOfAngle(AND)),180)"]
2;mirror_congruent_triangle_judgment_aas(2,BNA,DAN);Polygon(BNA)&Polygon(DAN)&Equal(MeasureOfAngle(BNA),MeasureOfAngle(AND))&Equal(MeasureOfAngle(NAB),MeasureOfAngle(DAN))&Equal(LengthOfLine(NA),LengthOfLine(AN));["MirrorCongruentBetweenTriangle(BNA,DAN)"]
3;mirror_congruent_triangle_property_line_equal(1,NAB,NDA);MirrorCongruentBetweenTriangle(NAB,NDA);["Equal(LengthOfLine(AB),LengthOfLine(DA))"]
4;mirror_congruent_triangle_property_line_equal(1,ABN,AND);MirrorCongruentBetweenTriangle(ABN,AND);["Equal(LengthOfLine(BN),LengthOfLine(ND))"]
5;midsegment_of_triangle_judgment_midpoint(1,MN,BCD);Polygon(BCD)&Collinear(BMC)&Collinear(BND)&Line(MN)&Equal(LengthOfLine(BM),LengthOfLine(CM))&Equal(LengthOfLine(BN),LengthOfLine(DN));["IsMidsegmentOfTriangle(MN,BCD)"]
6;midsegment_of_triangle_property_length(1,MN,BCD);IsMidsegmentOfTriangle(MN,BCD);["Equal(LengthOfLine(MN),Mul(LengthOfLine(CD),1/2))"]
7;line_addition(1,AD,DC);Collinear(ADC);["Equal(LengthOfLine(AC),Add(LengthOfLine(AD),LengthOfLine(DC)))"]

