Inputs for Problem B:
DESCRIPTION:
As shown in the diagram, AB=3*y-8, AD=13, CB=2*x+7, CD=10, ∠ADF=59°, ∠BFC=49°, ∠FBA=20°, DA and CB are opposite sides of the ▱ ADCB. Find the measure of ∠AFB.
CONSTRUCTION_CDL:
Shape(AD,DF,FA)
Shape(FD,DC,CF)
Shape(BF,FC,CB)
Shape(AF,FB,BA)
Collinear(AFC)
Collinear(BFD)
TEXT_CDL:
Equal(LengthOfLine(AB),3*y-8)
Equal(LengthOfLine(AD),13)
Equal(LengthOfLine(CB),2*x+7)
Equal(LengthOfLine(CD),10)
Equal(MeasureOfAngle(ADF),59)
Equal(MeasureOfAngle(BFC),49)
Equal(MeasureOfAngle(FBA),20)
Parallelogram(ADCB)
GOAL_CDL:
Value(MeasureOfAngle(AFB))
CONSTRUCTION_CDL_EXTENDED:
Shape(DF,FA,AD)
Shape(FA,AD,DF)
Shape(DC,CF,FD)
Shape(CF,FD,DC)
Shape(FC,CB,BF)
Shape(CB,BF,FC)
Shape(FB,BA,AF)
Shape(BA,AF,FB)
Shape(FA,AD,DC,CF)
Shape(AD,DC,CF,FA)
Shape(DC,CF,FA,AD)
Shape(CF,FA,AD,DC)
Shape(AD,DF,FB,BA)
Shape(DF,FB,BA,AD)
Shape(FB,BA,AD,DF)
Shape(BA,AD,DF,FB)
Shape(FD,DC,CB,BF)
Shape(DC,CB,BF,FD)
Shape(CB,BF,FD,DC)
Shape(BF,FD,DC,CB)
Shape(FC,CB,BA,AF)
Shape(CB,BA,AF,FC)
Shape(BA,AF,FC,CB)
Shape(AF,FC,CB,BA)
Shape(FA,AD,DC,CB,BF)
Shape(AD,DC,CB,BF,FA)
Shape(DC,CB,BF,FA,AD)
Shape(CB,BF,FA,AD,DC)
Shape(BF,FA,AD,DC,CB)
Shape(AD,DF,FC,CB,BA)
Shape(DF,FC,CB,BA,AD)
Shape(FC,CB,BA,AD,DF)
Shape(CB,BA,AD,DF,FC)
Shape(BA,AD,DF,FC,CB)
Shape(FD,DC,CB,BA,AF)
Shape(DC,CB,BA,AF,FD)
Shape(CB,BA,AF,FD,DC)
Shape(BA,AF,FD,DC,CB)
Shape(AF,FD,DC,CB,BA)
Shape(DC,CF,FB,BA,AD)
Shape(CF,FB,BA,AD,DC)
Shape(FB,BA,AD,DC,CF)
Shape(BA,AD,DC,CF,FB)
Shape(AD,DC,CF,FB,BA)
Shape(AD,DC,CB,BA)
Shape(DC,CB,BA,AD)
Shape(CB,BA,AD,DC)
Shape(BA,AD,DC,CB)
Collinear(CFA)
Collinear(DFB)
Point(A)
Point(C)
Point(F)
Point(B)
Point(D)
Line(AC)
Line(CA)
Line(AF)
Line(FA)
Line(FC)
Line(CF)
Line(BD)
Line(DB)
Line(BF)
Line(FB)
Line(FD)
Line(DF)
Line(AD)
Line(DA)
Line(DC)
Line(CD)
Line(CB)
Line(BC)
Line(BA)
Line(AB)
Angle(AFC)
Angle(CFA)
Angle(BFD)
Angle(DFB)
Angle(ADF)
Angle(DFA)
Angle(FAD)
Angle(FDC)
Angle(DCF)
Angle(CFD)
Angle(BFC)
Angle(FCB)
Angle(CBF)
Angle(AFB)
Angle(FBA)
Angle(BAF)
Angle(ADC)
Angle(DBA)
Angle(BAD)
Angle(DCB)
Angle(CBA)
Angle(BFA)
Angle(DFC)
Angle(AFD)
Angle(CFB)
Angle(ADB)
Angle(CAD)
Angle(BDC)
Angle(DCA)
Angle(ACB)
Angle(CBD)
Angle(BAC)
Angle(FDA)
Angle(DAF)
Angle(CDF)
Angle(FCD)
Angle(BCF)
Angle(FBC)
Angle(ABF)
Angle(FAB)
Angle(CDA)
Angle(ABD)
Angle(DAB)
Angle(BCD)
Angle(ABC)
Angle(BDA)
Angle(DAC)
Angle(CDB)
Angle(ACD)
Angle(BCA)
Angle(DBC)
Angle(CAB)
Polygon(ADF)
Polygon(AFD)
Polygon(DAF)
Polygon(DFA)
Polygon(FAD)
Polygon(FDA)
Polygon(FDC)
Polygon(FCD)
Polygon(DFC)
Polygon(DCF)
Polygon(CFD)
Polygon(CDF)
Polygon(BFC)
Polygon(BCF)
Polygon(FBC)
Polygon(FCB)
Polygon(CBF)
Polygon(CFB)
Polygon(AFB)
Polygon(ABF)
Polygon(FAB)
Polygon(FBA)
Polygon(BAF)
Polygon(BFA)
Polygon(ADC)
Polygon(ACD)
Polygon(DAC)
Polygon(DCA)
Polygon(CAD)
Polygon(CDA)
Polygon(ADB)
Polygon(ABD)
Polygon(DAB)
Polygon(DBA)
Polygon(BAD)
Polygon(BDA)
Polygon(DCB)
Polygon(DBC)
Polygon(CDB)
Polygon(CBD)
Polygon(BDC)
Polygon(BCD)
Polygon(CBA)
Polygon(CAB)
Polygon(BCA)
Polygon(BAC)
Polygon(ACB)
Polygon(ABC)
Polygon(FADCB)
Polygon(ADCBF)
Polygon(DCBFA)
Polygon(CBFAD)
Polygon(BFADC)
Polygon(ADFCB)
Polygon(DFCBA)
Polygon(FCBAD)
Polygon(CBADF)
Polygon(BADFC)
Polygon(FDCBA)
Polygon(DCBAF)
Polygon(CBAFD)
Polygon(BAFDC)
Polygon(AFDCB)
Polygon(DCFBA)
Polygon(CFBAD)
Polygon(FBADC)
Polygon(BADCF)
Polygon(ADCFB)
Polygon(ADCB)
Polygon(DCBA)
Polygon(CBAD)
Polygon(BADC)
Parallelogram(DCBA)
Parallelogram(CBAD)
Parallelogram(BADC)
ParallelBetweenLine(AB,DC)
ParallelBetweenLine(CD,BA)
ParallelBetweenLine(DA,CB)
ParallelBetweenLine(BC,AD)
SYMBOLS_AND_VALUES:
MeasureOfAngle(ABP);ma_abp;120
MeasureOfAngle(ABC);ma_abp;120
MeasureOfAngle(RDA);ma_rda;50
MeasureOfAngle(CDA);ma_rda;50
MeasureOfAngle(BCD);ma_pcr;None
MeasureOfAngle(BCR);ma_pcr;None
MeasureOfAngle(PCD);ma_pcr;None
MeasureOfAngle(PCR);ma_pcr;None

Outputs:
Outputs for Problem B:

***MODEL_RESPONSE_BEGIN***
EQUATIONS:
(3*y - 8) - LengthOfLine(AB)
13 - LengthOfLine(AD)
(2*x + 7) - LengthOfLine(CB)
10 - LengthOfLine(CD)
59 - MeasureOfAngle(ADF)
49 - MeasureOfAngle(BFC)
20 - MeasureOfAngle(FBA)

GOAL_SYMBOL:
MeasureOfAngle(AFB)

ANSWER:
52

THEOREM_SEQUENCE:
1; parallelogram_property_diagonal_bisection(1,ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(DFB); ["IsMidpointOfLine(F,AC)"]
2; parallelogram_property_diagonal_bisection(1,ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(DFB); ["IsMidpointOfLine(F,BD)"]
3; parallelogram_property_opposite_line_equal(ADCB); Parallelogram(ADCB); ["Equal(LengthOfLine(AD),LengthOfLine(CB))"]
4; congruent_triangle_judgment_sss(ADF,CBF); Polygon(ADF)&Polygon(CBF)&Equal(LengthOfLine(AD),LengthOfLine(CB))&Equal(LengthOfLine(AF),LengthOfLine(FC))&Equal(LengthOfLine(DF),LengthOfLine(BF)); ["CongruentBetweenTriangle(ADF,CBF)"]
5; congruent_triangle_property_angle_equal(ADF,CBF); CongruentBetweenTriangle(ADF,CBF); ["Equal(MeasureOfAngle(AFD),MeasureOfAngle(CFB))"]
6; adjacent_complementary_angle(AFB,BFC); Collinear(AFC)&Angle(AFB)&Angle(BFC); ["Equal(Add(MeasureOfAngle(AFB),MeasureOfAngle(BFC)),180)"]
***MODEL_RESPONSE_END***
RETRIES_MESSAGES:
#retry: 1; message: ERROR_TIER: TIER1_THEOREM_CALL_SYNTAX_VIOLATION
Verification failed. Theorem <flat_angle> branch error. Expected dict_keys(['1']) but got None. Please rewrite your response, you should change only the call to theorem <flat_angle> by adding the branch number from the dict_keys as the first argument
Model Answer:
RETRY_ANSWER:
52
RETRY_THEOREM_SEQUENCE:
1; flat_angle(ABC); Collinear(AFC); ["Equal(MeasureOfAngle(AFC),180)"]
2; flat_angle(ABC); Collinear(BFD); ["Equal(MeasureOfAngle(BFD),180)"]
#retry: 2; message: ERROR_TIER: TIER3_GOAL_NOT_REACHED
verification failed.

- Goal: measure of angle AFB
- Model answer: 52.0
- Error: Your proof doesn't uniquely determine the value. You need to use additional theorems to constrain the value.
- Available premises:
  Parallel Lines: AB ∥ CD, AD ∥ BC
  Collinear Points: AFC, BFD
  Polygons: ABC, ABD, ABF, ACB, ACD, ADB, ADC, ADCB, ADCBF, ADCFB, ADF, ADFCB, AFB, AFD, AFDCB, BADC, BADCF, BADFC, BAFDC, BCD, BCF, BDC, BFADC, BFC, CBAD, CBADF, CBAFD, CBFAD, CDF, CFBAD, CFD, DCBA, DCBAF, DCBFA, DCFBA, DFCBA, FADCB, FBADC, FCBAD, FDCBA
- Theorems related to the goal:
  None found that constrain this goal
- Solver constraints directly related to this goal:
  ∠AFB <= 180
  ∠AFB > 0

Please fix the proof.
Model Answer:
RETRY_ANSWER:
52
RETRY_THEOREM_SEQUENCE:
1; flat_angle(1,AFC); Collinear(AFC); ["Equal(MeasureOfAngle(AFC),180)"]
2; flat_angle(1,BFD); Collinear(BFD); ["Equal(MeasureOfAngle(BFD),180)"]
#retry: 3; message: ERROR_TIER: TIER1_THEOREM_CALL_SYNTAX_VIOLATION
Verification failed. Theorem <parallelogram_property_diagonal_bisection> branch error. Expected dict_keys(['1']) but got None. Please rewrite your response, you should change only the call to theorem <parallelogram_property_diagonal_bisection> by adding the branch number from the dict_keys as the first argument
Model Answer:
RETRY_ANSWER:
52
RETRY_THEOREM_SEQUENCE:
1; parallelogram_property_diagonal_bisection(ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(BFD); ["IsMidpointOfLine(F,AC)"]
2; parallelogram_property_diagonal_bisection(ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(BFD); ["IsMidpointOfLine(F,BD)"]
3; parallelogram_property_opposite_line_equal(ADCB); Parallelogram(ADCB); ["Equal(LengthOfLine(AD),LengthOfLine(CB))"]
4; congruent_triangle_judgment_sss(ADF,CBF); Polygon(ADF)&Polygon(CBF)&Equal(LengthOfLine(AD),LengthOfLine(CB))&Equal(LengthOfLine(AF),LengthOfLine(CF))&Equal(LengthOfLine(DF),LengthOfLine(BF)); ["CongruentBetweenTriangle(ADF,CBF)"]
5; congruent_triangle_property_angle_equal(ADF,CBF); CongruentBetweenTriangle(ADF,CBF); ["Equal(MeasureOfAngle(AFD),MeasureOfAngle(CFB))"]
6; adjacent_complementary_angle(AFB,BFC); Collinear(AFC)&Angle(AFB)&Angle(BFC); ["Equal(Add(MeasureOfAngle(AFB),MeasureOfAngle(BFC)),180)"]
#retry: 4; message: ERROR_TIER: TIER1_THEOREM_CALL_SYNTAX_VIOLATION
Verification failed. Premises mismatch:
Model premises: Parallelogram(ADCB)&Collinear(AFC)&Collinear(BFD)
Expected premises: Parallelogram(ADCB)&Collinear(AFC)&Collinear(DFB)
Model Answer:
RETRY_ANSWER:
52
RETRY_THEOREM_SEQUENCE:
1; parallelogram_property_diagonal_bisection(1,ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(BFD); ["IsMidpointOfLine(F,AC)"]
2; parallelogram_property_diagonal_bisection(1,ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(BFD); ["IsMidpointOfLine(F,BD)"]
3; parallelogram_property_opposite_line_equal(ADCB); Parallelogram(ADCB); ["Equal(LengthOfLine(AD),LengthOfLine(CB))"]
4; congruent_triangle_judgment_sss(ADF,CBF); Polygon(ADF)&Polygon(CBF)&Equal(LengthOfLine(AD),LengthOfLine(CB))&Equal(LengthOfLine(AF),LengthOfLine(FC))&Equal(LengthOfLine(DF),LengthOfLine(BF)); ["CongruentBetweenTriangle(ADF,CBF)"]
5; congruent_triangle_property_angle_equal(ADF,CBF); CongruentBetweenTriangle(ADF,CBF); ["Equal(MeasureOfAngle(AFD),MeasureOfAngle(CFB))"]
6; adjacent_complementary_angle(AFB,BFC); Collinear(AFC)&Angle(AFB)&Angle(BFC); ["Equal(Add(MeasureOfAngle(AFB),MeasureOfAngle(BFC)),180)"]
#retry: 5; message: ERROR_TIER: TIER1_THEOREM_CALL_SYNTAX_VIOLATION
Verification failed. Conclusions mismatch:
Model conclusions: IsMidpointOfLine(F,BD)
Expected conclusions: IsMidpointOfLine(F,AC)
Model Answer:
RETRY_ANSWER:
52
RETRY_THEOREM_SEQUENCE:
1; parallelogram_property_diagonal_bisection(1,ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(DFB); ["IsMidpointOfLine(F,AC)"]
2; parallelogram_property_diagonal_bisection(1,ADCB,F); Parallelogram(ADCB)&Collinear(AFC)&Collinear(DFB); ["IsMidpointOfLine(F,BD)"]
3; parallelogram_property_opposite_line_equal(ADCB); Parallelogram(ADCB); ["Equal(LengthOfLine(AD),LengthOfLine(CB))"]
4; congruent_triangle_judgment_sss(ADF,CBF); Polygon(ADF)&Polygon(CBF)&Equal(LengthOfLine(AD),LengthOfLine(CB))&Equal(LengthOfLine(AF),LengthOfLine(FC))&Equal(LengthOfLine(DF),LengthOfLine(BF)); ["CongruentBetweenTriangle(ADF,CBF)"]
5; congruent_triangle_property_angle_equal(ADF,CBF); CongruentBetweenTriangle(ADF,CBF); ["Equal(MeasureOfAngle(AFD),MeasureOfAngle(CFB))"]
6; adjacent_complementary_angle(AFB,BFC); Collinear(AFC)&Angle(AFB)&Angle(BFC); ["Equal(Add(MeasureOfAngle(AFB),MeasureOfAngle(BFC)),180)"]
#RETRIES:
5
#RUNS:
0


GT_EQUATIONS:
ll_ab-3*y+8
ll_ad-13
ll_cb-2*x-7
ll_cd-10
ma_adf-59
ma_bfc-49
ma_fba-20
GT_GOAL_SYMBOL:
ma_afb
GT_ANSWER:
131
GT_THEOREM_SEQUENCE:
1;adjacent_complementary_angle(1,AFB,BFC);Collinear(AFC)&Angle(AFB)&Angle(BFC);["Equal(Add(MeasureOfAngle(AFB),MeasureOfAngle(BFC)),180)"]

